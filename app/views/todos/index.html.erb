<p><%= link_to "New Todo Item", new_todo_path, class: "btn btn-info" %></p>
<div>
<%= form_tag(search_path, method: :post,remote: true, id: "search_form") do%>
<br>
	<div>
		<label>Filter todo list based on date, categories and status:</label>
	</div>
	<br>
	<div id="date_search" class="form-group">
		<div class='input-group date' id='datepicker-from-date'><label>From date: <%= text_field_tag :from_date,nil, class: "form-control", autocomplete: 'off'%><span class="input-group-addon">
    <span class="glyphicon glyphicon-calendar"></span>
    </span></div> </label>
		<div class='input-group date' id='datepicker-to-date'><label>To date: <%= text_field_tag :to_date,nil, class: "form-control", autocomplete: 'off'%><span class="input-group-addon">
    <span class="glyphicon glyphicon-calendar"></span>
    </span></div></label>
	</div>
	<div>
		<label>Categories: </label>
		<%= select_tag "categories[]", options_for_select(Todo::CATEGORIES.map { |k, v| [k.to_s.titleize, k]}), multiple: "multiple", class: "selectpicker"%>
		<label>Completed</label>
		<%= check_box_tag "completed", true%>
		<label>Pending</label>
		<%= check_box_tag "pending", true%>
	</div>
	<br>
<% end %>
</div><br>
<%= form_tag destroy_selected_path, method: :delete,remote: true do %>
<table class="table table-bordered table-striped sortable" id="todos_table">
	<%= render "todos_list", locals: {todos: @todos}%>
</table>
<%if @todos.present?%>
	<%= submit_tag 'Delete selected', class: "btn btn-primary" %><br><br>
	<%= link_to "Refresh Todo List", todos_path, class: "btn btn-success"%>
<% end %>
<% end %>



<script type="text/javascript">
	$(document).ready(function(){
		$('.selectpicker').multiselect({
			autoClose: true,
			onChange: function(element, checked) {
	      $("#search_form").submit();
      }
		});

		$("#from_date").datepicker({
      format: 'yyyy-mm-dd',
      autoclose: true
    }).on('changeDate', function(e) {
    	if (($("#from_date").val() > $("#to_date").val()) && $("#to_date").val() != "") {
        alert("From date can not be greater that to date");
        $('#from_date').val('')
      }else{
      	$("#search_form").submit();
      }
    });
    $("#to_date").datepicker({
      format: 'yyyy-mm-dd',
      autoclose: true
    }).on('changeDate', function(e) {
    	if (($("#from_date").val() > $("#to_date").val()) && $("#from_date").val() != "") {
        alert("From date can not be greater that to date");
        $('#to_date').val('')
      }else{
      	$("#search_form").submit();
      }
    });

    $("#completed").on("change",function(){
    	$("#search_form").submit();
    })

    $("#pending").on("change",function(){
    	$("#search_form").submit();
    })
		if ($("tr.reminder_class").length > 0) {
 			$.each($("tr.reminder_class"),function(){
				var name = $(this).data("name");
				var date = $(this).data("date");
				setTimeout(function(){ alert("Reminder: Todo item - "+name+" needs to be done. Due date is "+date) }, 2000);
			})
		}
	})
</script>